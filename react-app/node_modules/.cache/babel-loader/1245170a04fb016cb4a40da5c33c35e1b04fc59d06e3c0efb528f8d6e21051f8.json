{"ast":null,"code":"var _jsxFileName = \"/Users/yrmee/Desktop/React_app_portfolio/react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  // Storing and Saving Todos Locally\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos); // setTodos(prevTodos => [...prevTodos, ...storedTodos])\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  // Toggle the checkbox\n  function toggleTodo(id) {\n    const newTodos = [...todos]; // creating a copy, never change the state directly.\n    const todo = newTodos.find(todo => todo.id === id); // from newTodos, find a todo at the todo.id with that matches the id we passed in\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  // Function for the Add todo Button\n  function handleAddTodo(event) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null; // clears the current value input\n  }\n\n  // Function to clear All the Complete-Checked Todos Button\n  function handleClearTodos(event) {\n    const filterCompleteTodos = todos.filter(todo => !todo.complete);\n    setTodos(filterCompleteTodos);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \" Tasks for today: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      className: \"todoList\",\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputText\",\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btnAdd\",\n      onClick: handleAddTodo,\n      children: \" Add \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btnClearAll\",\n      onClick: handleClearTodos,\n      children: \" Clear Complete \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todosLeftToDo\",\n      children: [\"Tasks still on the list:\", todos.filter(todo => !todo.complete).length, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todosCompleted\",\n      children: [\"Checked off tasks: \", todos.filter(todo => todo.complete).length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TodoList","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","LOCAL_STORAGE_KEY","App","_s","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","id","newTodos","todo","find","complete","handleAddTodo","event","name","current","value","prevTodos","handleClearTodos","filterCompleteTodos","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","class","onClick","length","_c","$RefreshReg$"],"sources":["/Users/yrmee/Desktop/React_app_portfolio/react-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  // Storing and Saving Todos Locally\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)            // setTodos(prevTodos => [...prevTodos, ...storedTodos])\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  // Toggle the checkbox\n  function toggleTodo(id) {\n    const newTodos = [...todos] // creating a copy, never change the state directly.\n    const todo = newTodos.find(todo => todo.id === id) // from newTodos, find a todo at the todo.id with that matches the id we passed in\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  // Function for the Add todo Button\n  function handleAddTodo(event) {\n    const name = todoNameRef.current.value\n    if (name === '') return \n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null  // clears the current value input\n  }\n\n  // Function to clear All the Complete-Checked Todos Button\n  function handleClearTodos(event) {\n    const filterCompleteTodos = todos.filter(todo => !todo.complete)\n    setTodos(filterCompleteTodos)\n  }\n\n  return (\n    <>\n    <h1 className=\"title\"> Tasks for today: </h1>\n\n    <TodoList className=\"todoList\" todos={todos} toggleTodo={toggleTodo}/>\n\n    <input className=\"inputText\" ref={todoNameRef} type=\"text\" />\n\n    <button class=\"btnAdd\" onClick={handleAddTodo}> Add </button>\n    <button class=\"btnClearAll\" onClick={handleClearTodos}> Clear Complete </button>\n\n    <div className=\"todosLeftToDo\"> \n      Tasks still on the list: \n      {todos.filter(todo => !todo.complete).length} </div>\n    <div className=\"todosCompleted\">\n      Checked off tasks: {todos.filter(todo => todo.complete).length} \n    </div>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}